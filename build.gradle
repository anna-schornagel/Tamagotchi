plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.1.0'
//    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.tamagotchi'
    mainClass = 'com.example.tamagotchi.HelloApplication'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.media']
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
//    implementation('eu.hansolo:tilesfx:17.1.17') {
//        exclude(group: 'org.openjfx')
//    }
//    implementation('com.github.almasb:fxgl:17.2') {
//        exclude(group: 'org.openjfx')
//        exclude(group: 'org.jetbrains.kotlin')
//    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation 'org.jetbrains:annotations:24.0.0'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.43.2.1'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}